{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/call/call.component.ts","./src/app/call/call.component.html","./src/app/contact-info/contact-info.component.ts","./src/app/contact-info/contact-info.component.html","./src/app/dashboard/dashboard.component.ts","./src/app/dashboard/dashboard.component.html","./src/app/display/display.component.ts","./src/app/display/display.component.html","./src/app/navbar/navbar.component.ts","./src/app/navbar/navbar.component.html","./src/app/network/network.component.ts","./src/app/network/network.component.html","./src/app/peripherals/peripherals.component.ts","./src/app/peripherals/peripherals.component.html","./src/app/system-time/system-time.component.ts","./src/app/system-time/system-time.component.html","./src/app/system-unit/system-unit.component.ts","./src/app/system-unit/system-unit.component.html","./src/app/xml.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'frontend';\n}\n","<navbar></navbar>\n<div>\n  <router-outlet></router-outlet>\n</div>\n<display></display>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\n// import { AppRoutingModule } from './app-routing.module';\nimport {HttpClientModule} from '@angular/common/http';\nimport {HttpModule} from '@angular/http';\n\nimport { AppComponent } from './app.component';\n\n\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { SystemUnitComponent } from './system-unit/system-unit.component';\nimport { PeripheralsComponent } from './peripherals/peripherals.component';\nimport { CallComponent } from './call/call.component';\nimport { NetworkComponent } from './network/network.component';\nimport { SystemTimeComponent } from './system-time/system-time.component';\nimport { ContactInfoComponent } from './contact-info/contact-info.component';\nimport { DashboardComponent } from './dashboard/dashboard.component';\nimport { DisplayComponent } from './display/display.component';\n\nimport { NavbarComponent } from './navbar/navbar.component';\nimport { XmlService } from './xml.service';\n\n\nconst routes: Routes = [\n  {path: 'dashboard', component: DashboardComponent},\n  {path: 'display', component: DisplayComponent},\n  {path: ' ', redirectTo:  'dashboard', pathMatch: 'full'}\n];\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    SystemUnitComponent,\n    PeripheralsComponent,\n    CallComponent,\n    NetworkComponent,\n    SystemTimeComponent,\n    ContactInfoComponent,\n    DashboardComponent,\n    DisplayComponent,\n    NavbarComponent\n  ],\n  imports: [\n    BrowserModule,\n    HttpClientModule,\n    HttpModule,\n    // AppRoutingModule,\n    // Add line below:\n    BrowserAnimationsModule,\n    RouterModule.forRoot(routes)\n  ],\n  providers: [XmlService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-call',\n  templateUrl: './call.component.html',\n  styleUrls: ['./call.component.css']\n})\nexport class CallComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>call works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-contact-info',\n  templateUrl: './contact-info.component.html',\n  styleUrls: ['./contact-info.component.css']\n})\nexport class ContactInfoComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>contact-info works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-dashboard',\n  templateUrl: './dashboard.component.html',\n  styleUrls: ['./dashboard.component.css']\n})\nexport class DashboardComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>dashboard works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'display',\n  templateUrl: './display.component.html',\n  styleUrls: ['./display.component.css']\n})\nexport class DisplayComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>display works!</p>\n<network></network>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'navbar',\n  templateUrl: './navbar.component.html',\n  styleUrls: ['./navbar.component.css']\n})\nexport class NavbarComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<nav>\n        <div class=\"nav-wrapper #f3e5f5\">\n          <a  class=\"brand-logo center \">Welcome User</a>\n          <ul class=\"left hide-on-med-and-down\">\n            <!-- <li><a href=\"sass.html\">Sass</a></li>\n            <li><a href=\"badges.html\">Components</a></li>\n            <li class=\"active\"><a href=\"collapsible.html\">JavaScript</a></li> -->\n          </ul>\n        </div>\n      </nav>","import { Component, OnInit } from '@angular/core';\nimport { XmlService } from '../xml.service';\nimport { Http } from '@angular/http';\n\n\n@Component({\n  selector: 'network',\n  templateUrl: './network.component.html',\n  styleUrls: ['./network.component.css']\n})\nexport class NetworkComponent implements OnInit {\nnetwork: any[];\n\n  // constructor( private service: XmlService) { }\nconstructor (http: Http){\n   http.get('http://localhost:3000/xml')\n   .subscribe(response => {\n    \n    //  this.network = response.json();\n    //  this.xml = response.json().Status.Network[0].Ethernet[0];\n  console.log(Object.values(response.json().Status.Network[0].Ethernet[0]));\n  this.network = Object.values(response.json().Status.Network[0].Ethernet[0]);\n \n   })\n  //  console.log(this.network);\n}\n\n\n\n\n  ngOnInit() {\n      // this.service.getNetwork()\n      // .subscribe(response => {\n      //   this.network = response.json();\n      // })\n\n      // console.log(this.network);\n    }\n  \n\n}\n","<p>network works!</p>\n\n<!-- Ethernet Table -->\n\n<table>\n        <thead>\n          <tr>\n              <th>Name</th>\n              <th>MacAddress</th>\n              <th>Speed</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          <tr>\n            <td>Ethernet</td>\n            <td *ngFor=\"let item of network\">\n                {{item}}\n            </td>\n           \n          </tr>\n          \n        </tbody>\n      </table>","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-peripherals',\n  templateUrl: './peripherals.component.html',\n  styleUrls: ['./peripherals.component.css']\n})\nexport class PeripheralsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>peripherals works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-system-time',\n  templateUrl: './system-time.component.html',\n  styleUrls: ['./system-time.component.css']\n})\nexport class SystemTimeComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>system-time works!</p>\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-system-unit',\n  templateUrl: './system-unit.component.html',\n  styleUrls: ['./system-unit.component.css']\n})\nexport class SystemUnitComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","<p>system-unit works!</p>\n","import { Injectable } from '@angular/core';\nimport {Http} from '@angular/http';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class XmlService {\n\n  private url = 'http://localhost:3000/xml';\n\n  constructor(private http: Http) { }\n\n  getNetwork() {\n    return this.http.get(this.url);\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}